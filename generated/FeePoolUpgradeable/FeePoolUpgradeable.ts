// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ClaimedRewards extends ethereum.Event {
  get params(): ClaimedRewards__Params {
    return new ClaimedRewards__Params(this);
  }
}

export class ClaimedRewards__Params {
  _event: ClaimedRewards;

  constructor(event: ClaimedRewards) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenTicker(): string {
    return this._event.parameters[2].value.toString();
  }

  get noOfTokens(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get claimTimestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeePoolUpgradeable extends ethereum.SmartContract {
  static bind(address: Address): FeePoolUpgradeable {
    return new FeePoolUpgradeable("FeePoolUpgradeable", address);
  }

  adminClaimedTillEpoch(param0: string): BigInt {
    let result = super.call(
      "adminClaimedTillEpoch",
      "adminClaimedTillEpoch(string):(uint256)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toBigInt();
  }

  try_adminClaimedTillEpoch(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "adminClaimedTillEpoch",
      "adminClaimedTillEpoch(string):(uint256)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bridgeUpgradeable(): Address {
    let result = super.call(
      "bridgeUpgradeable",
      "bridgeUpgradeable():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_bridgeUpgradeable(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "bridgeUpgradeable",
      "bridgeUpgradeable():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  bridgeUtilsUpgradeable(): Address {
    let result = super.call(
      "bridgeUtilsUpgradeable",
      "bridgeUtilsUpgradeable():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_bridgeUtilsUpgradeable(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "bridgeUtilsUpgradeable",
      "bridgeUtilsUpgradeable():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feesInCurrentEpoch(param0: string): BigInt {
    let result = super.call(
      "feesInCurrentEpoch",
      "feesInCurrentEpoch(string):(uint256)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toBigInt();
  }

  try_feesInCurrentEpoch(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feesInCurrentEpoch",
      "feesInCurrentEpoch(string):(uint256)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAdminTokenFees(_tokenTicker: string, _limit: BigInt): BigInt {
    let result = super.call(
      "getAdminTokenFees",
      "getAdminTokenFees(string,uint256):(uint256)",
      [
        ethereum.Value.fromString(_tokenTicker),
        ethereum.Value.fromUnsignedBigInt(_limit)
      ]
    );

    return result[0].toBigInt();
  }

  try_getAdminTokenFees(
    _tokenTicker: string,
    _limit: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAdminTokenFees",
      "getAdminTokenFees(string,uint256):(uint256)",
      [
        ethereum.Value.fromString(_tokenTicker),
        ethereum.Value.fromUnsignedBigInt(_limit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLastEpochLpFees(_tokenTicker: string): BigInt {
    let result = super.call(
      "getLastEpochLpFees",
      "getLastEpochLpFees(string):(uint256)",
      [ethereum.Value.fromString(_tokenTicker)]
    );

    return result[0].toBigInt();
  }

  try_getLastEpochLpFees(_tokenTicker: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLastEpochLpFees",
      "getLastEpochLpFees(string):(uint256)",
      [ethereum.Value.fromString(_tokenTicker)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserConfirmedRewards(
    _tokenTicker: string,
    _account: Address,
    _index: BigInt
  ): BigInt {
    let result = super.call(
      "getUserConfirmedRewards",
      "getUserConfirmedRewards(string,address,uint256):(uint256)",
      [
        ethereum.Value.fromString(_tokenTicker),
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );

    return result[0].toBigInt();
  }

  try_getUserConfirmedRewards(
    _tokenTicker: string,
    _account: Address,
    _index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUserConfirmedRewards",
      "getUserConfirmedRewards(string,address,uint256):(uint256)",
      [
        ethereum.Value.fromString(_tokenTicker),
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserUnconfirmedRewards(
    _tokenTicker: string,
    _account: Address,
    _index: BigInt
  ): BigInt {
    let result = super.call(
      "getUserUnconfirmedRewards",
      "getUserUnconfirmedRewards(string,address,uint256):(uint256)",
      [
        ethereum.Value.fromString(_tokenTicker),
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );

    return result[0].toBigInt();
  }

  try_getUserUnconfirmedRewards(
    _tokenTicker: string,
    _account: Address,
    _index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUserUnconfirmedRewards",
      "getUserUnconfirmedRewards(string,address,uint256):(uint256)",
      [
        ethereum.Value.fromString(_tokenTicker),
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenBridgeRegistryUpgradeable(): Address {
    let result = super.call(
      "tokenBridgeRegistryUpgradeable",
      "tokenBridgeRegistryUpgradeable():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_tokenBridgeRegistryUpgradeable(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenBridgeRegistryUpgradeable",
      "tokenBridgeRegistryUpgradeable():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalFees(param0: string): BigInt {
    let result = super.call("totalFees", "totalFees(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toBigInt();
  }

  try_totalFees(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalFees", "totalFees(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ClaimFeeShareCall extends ethereum.Call {
  get inputs(): ClaimFeeShareCall__Inputs {
    return new ClaimFeeShareCall__Inputs(this);
  }

  get outputs(): ClaimFeeShareCall__Outputs {
    return new ClaimFeeShareCall__Outputs(this);
  }
}

export class ClaimFeeShareCall__Inputs {
  _call: ClaimFeeShareCall;

  constructor(call: ClaimFeeShareCall) {
    this._call = call;
  }

  get _tokenTicker(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ClaimFeeShareCall__Outputs {
  _call: ClaimFeeShareCall;

  constructor(call: ClaimFeeShareCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _tokenBridgeRegistryUpgradeable(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bridgeUpgradeable(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ResetFeesInCurrentEpochCall extends ethereum.Call {
  get inputs(): ResetFeesInCurrentEpochCall__Inputs {
    return new ResetFeesInCurrentEpochCall__Inputs(this);
  }

  get outputs(): ResetFeesInCurrentEpochCall__Outputs {
    return new ResetFeesInCurrentEpochCall__Outputs(this);
  }
}

export class ResetFeesInCurrentEpochCall__Inputs {
  _call: ResetFeesInCurrentEpochCall;

  constructor(call: ResetFeesInCurrentEpochCall) {
    this._call = call;
  }

  get _tokenTicker(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class ResetFeesInCurrentEpochCall__Outputs {
  _call: ResetFeesInCurrentEpochCall;

  constructor(call: ResetFeesInCurrentEpochCall) {
    this._call = call;
  }
}

export class TransferLpFeeCall extends ethereum.Call {
  get inputs(): TransferLpFeeCall__Inputs {
    return new TransferLpFeeCall__Inputs(this);
  }

  get outputs(): TransferLpFeeCall__Outputs {
    return new TransferLpFeeCall__Outputs(this);
  }
}

export class TransferLpFeeCall__Inputs {
  _call: TransferLpFeeCall;

  constructor(call: TransferLpFeeCall) {
    this._call = call;
  }

  get _tokenTicker(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _index(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferLpFeeCall__Outputs {
  _call: TransferLpFeeCall;

  constructor(call: TransferLpFeeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateBridgeUpgradeableAddressCall extends ethereum.Call {
  get inputs(): UpdateBridgeUpgradeableAddressCall__Inputs {
    return new UpdateBridgeUpgradeableAddressCall__Inputs(this);
  }

  get outputs(): UpdateBridgeUpgradeableAddressCall__Outputs {
    return new UpdateBridgeUpgradeableAddressCall__Outputs(this);
  }
}

export class UpdateBridgeUpgradeableAddressCall__Inputs {
  _call: UpdateBridgeUpgradeableAddressCall;

  constructor(call: UpdateBridgeUpgradeableAddressCall) {
    this._call = call;
  }

  get _newInstance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateBridgeUpgradeableAddressCall__Outputs {
  _call: UpdateBridgeUpgradeableAddressCall;

  constructor(call: UpdateBridgeUpgradeableAddressCall) {
    this._call = call;
  }
}

export class UpdateBridgeUtilsUpgradeableAddressCall extends ethereum.Call {
  get inputs(): UpdateBridgeUtilsUpgradeableAddressCall__Inputs {
    return new UpdateBridgeUtilsUpgradeableAddressCall__Inputs(this);
  }

  get outputs(): UpdateBridgeUtilsUpgradeableAddressCall__Outputs {
    return new UpdateBridgeUtilsUpgradeableAddressCall__Outputs(this);
  }
}

export class UpdateBridgeUtilsUpgradeableAddressCall__Inputs {
  _call: UpdateBridgeUtilsUpgradeableAddressCall;

  constructor(call: UpdateBridgeUtilsUpgradeableAddressCall) {
    this._call = call;
  }

  get _newInstance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateBridgeUtilsUpgradeableAddressCall__Outputs {
  _call: UpdateBridgeUtilsUpgradeableAddressCall;

  constructor(call: UpdateBridgeUtilsUpgradeableAddressCall) {
    this._call = call;
  }
}

export class UpdateTokenBridgeRegistryAddressCall extends ethereum.Call {
  get inputs(): UpdateTokenBridgeRegistryAddressCall__Inputs {
    return new UpdateTokenBridgeRegistryAddressCall__Inputs(this);
  }

  get outputs(): UpdateTokenBridgeRegistryAddressCall__Outputs {
    return new UpdateTokenBridgeRegistryAddressCall__Outputs(this);
  }
}

export class UpdateTokenBridgeRegistryAddressCall__Inputs {
  _call: UpdateTokenBridgeRegistryAddressCall;

  constructor(call: UpdateTokenBridgeRegistryAddressCall) {
    this._call = call;
  }

  get _newInstance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateTokenBridgeRegistryAddressCall__Outputs {
  _call: UpdateTokenBridgeRegistryAddressCall;

  constructor(call: UpdateTokenBridgeRegistryAddressCall) {
    this._call = call;
  }
}

export class UpdateTotalFeesCall extends ethereum.Call {
  get inputs(): UpdateTotalFeesCall__Inputs {
    return new UpdateTotalFeesCall__Inputs(this);
  }

  get outputs(): UpdateTotalFeesCall__Outputs {
    return new UpdateTotalFeesCall__Outputs(this);
  }
}

export class UpdateTotalFeesCall__Inputs {
  _call: UpdateTotalFeesCall;

  constructor(call: UpdateTotalFeesCall) {
    this._call = call;
  }

  get _tokenTicker(): string {
    return this._call.inputValues[0].value.toString();
  }

  get feesEarned(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _isAddingFees(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class UpdateTotalFeesCall__Outputs {
  _call: UpdateTotalFeesCall;

  constructor(call: UpdateTotalFeesCall) {
    this._call = call;
  }
}

export class WithdrawAdminAllTokenFeesCall extends ethereum.Call {
  get inputs(): WithdrawAdminAllTokenFeesCall__Inputs {
    return new WithdrawAdminAllTokenFeesCall__Inputs(this);
  }

  get outputs(): WithdrawAdminAllTokenFeesCall__Outputs {
    return new WithdrawAdminAllTokenFeesCall__Outputs(this);
  }
}

export class WithdrawAdminAllTokenFeesCall__Inputs {
  _call: WithdrawAdminAllTokenFeesCall;

  constructor(call: WithdrawAdminAllTokenFeesCall) {
    this._call = call;
  }

  get _limit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawAdminAllTokenFeesCall__Outputs {
  _call: WithdrawAdminAllTokenFeesCall;

  constructor(call: WithdrawAdminAllTokenFeesCall) {
    this._call = call;
  }
}

export class WithdrawAdminTokenFeesCall extends ethereum.Call {
  get inputs(): WithdrawAdminTokenFeesCall__Inputs {
    return new WithdrawAdminTokenFeesCall__Inputs(this);
  }

  get outputs(): WithdrawAdminTokenFeesCall__Outputs {
    return new WithdrawAdminTokenFeesCall__Outputs(this);
  }
}

export class WithdrawAdminTokenFeesCall__Inputs {
  _call: WithdrawAdminTokenFeesCall;

  constructor(call: WithdrawAdminTokenFeesCall) {
    this._call = call;
  }

  get _tokenTicker(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _limit(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawAdminTokenFeesCall__Outputs {
  _call: WithdrawAdminTokenFeesCall;

  constructor(call: WithdrawAdminTokenFeesCall) {
    this._call = call;
  }
}
